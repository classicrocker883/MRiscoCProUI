name: HC32 Build Configs

######################### Aquila HC32 #########################

on:
  workflow_dispatch:
  release:
    types: [prereleased]

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [HC32]
        ui: [ProUI,JyersUI,CrealityUI]
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$AQUILA_VER" = HC32 ]; then AVTMP="HC32"; fi;
        echo "filename=${AVTMP}-${UI}_Default-NP${TPTMP}${ISTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationDNP.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advDNP.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if [ "$UI" = "JyersUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD_JYERSUI/" Marlin/Configuration.h; fi;
        if [ "$UI" = "CrealityUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD/" Marlin/Configuration.h; fi;
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($IS); then ISMP=; else ISMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${ISMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${ISMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        UI: ${{ matrix.ui }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Manual-Mesh:
    name: Build Manual-Mesh Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [HC32]
        ui: [ProUI,JyersUI,CrealityUI]
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$AQUILA_VER" = HC32 ]; then AVTMP="HC32"; fi;
        echo "filename=${AVTMP}-${UI}_MM$${TPTMP}{ISTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationMM.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advMM.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if [ "$UI" = "JyersUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD_JYERSUI/" Marlin/Configuration.h; fi;
        if [ "$UI" = "CrealityUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD/" Marlin/Configuration.h; fi;
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($IS); then ISMP=; else ISMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${ISMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${ISMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        UI: ${{ matrix.ui }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL:
    name: Build UBL ProUI/NoPro Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [HC32]
        temp: [true,false]
        ui: [ProUI,JyersUI,CrealityUI]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if [ "$AQUILA_VER" = HC32 ]; then AVTMP="HC32"; fi;
        echo "filename=${AVTMP}-${UI}_UBL${TPTMP}${ISTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationUBL.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advUBL.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if [ "$UI" = "JyersUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD_JYERSUI/" Marlin/Configuration.h; fi;
        if [ "$UI" = "CrealityUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD/" Marlin/Configuration.h; fi;
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($IS); then ISMP=; else ISMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${ISMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${ISMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        UI: ${{ matrix.ui }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLTouch-ProUI:
    name: Build BL-Touch ProUI Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [HC32]
        ui: [ProUI,JyersUI,CrealityUI]
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3.3.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$TP" ]; then TPTMP=-MPC; else TPTMP=; fi;
        if [ "$IS" ]; then ISTMP=-IS; else ISTMP=; fi;
        if [ "$AQUILA_VER" = "HC32" ]; then AVTMP="HC32"; fi;
        echo "filename=${AVTMP}-${UI}_BLT${TPTMP}${ISTMP}.bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationBLT.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advBLT.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if [ "$UI" = "JyersUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD_JYERSUI/" Marlin/Configuration.h; fi;
        if [ "$UI" = "CrealityUI"]; then sed -i "s/.*#define DWIN_LCD_PROUI/#define DWIN_CREALITY_LCD/" Marlin/Configuration.h; fi;
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($IS); then ISMP=; else ISMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${ISMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${ISMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        UI: ${{ matrix.ui }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
